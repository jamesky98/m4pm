scalar ScalarName
scalar Upload

type File {
  filename: String!
  mimetype: String!
  encoding: String!
}

type Query {
  getNowUser: user
}

type Mutation {
  # ================
  # user login
    allusers: [user!]!
    getUserById(user_id: Int!): user
    getUserByName(user_name: String): user
    checktoken: Boolean
    signup(
      user_name: String!
      user_name2: String!
      user_password: String!
      user_mail: String!
    ): AuthPayload
    login(user_name: String!, user_password: String!): AuthPayload
    updateUser(
      user_id: Int!
      user_name: String
      user_mail: String
      user_password: String
      active: Int
      role: Int
      user_name2: String
    ): user
    delUser(user_id: Int!): user
    chkUserByName(user_name: String): user
    changePASSWord(user_id: Int!, oldpass: String!, newpass: String!, chkpass: String!, enforce: Boolean): String
  # ================
  # ================
  # m4case
    getAllCase: [m4case]
    getCaseById(id:Int!): m4case
    saveCaseById(
      id: Int! 
      code: String!
      active: Int
      data: JSONObject
      parent_id: Int
    ): m4case
  # ================
}

type AuthPayload {
  token: String
  user: user
}

type user {
  user_id: ID!
  user_name: String!
  user_mail: String!
  user_password: String!
  active: Int
  role: Int
  user_name2: String!
  user_updated_time: Date
}

type m4case {
  id: ID!
  code: String!
  active: Int
  data: JSON
  parent_id: Int
  m4case: m4case
  other_m4case: [m4case]
}